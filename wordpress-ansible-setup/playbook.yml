---

- 
  name: Installing lampstack using ansible
  hosts: web
  strategy: free
  vars_files:
    - variables.yml
  tasks:
    - name: Installing packages
      apt: name={{ item }} state=present update_cache=yes 
      become: yes
      with_items:
        - nginx
        - mariadb-server
        - php8.3
        - php-mysql
        - unzip
        - php-fpm
        - python3-pip
        - python3-pymysql
      when: ansible_facts['os_family'] == "Debian"

    - name: Installing packages
      yum: name={{ item }} state=present update_cache=yes
      become: yes
      with_items:
        - mariadb105-server
        - php8.3
        - php8.3-mysqlnd
        - nginx
        - php8.3-fpm
        - unzip
        - python3-pip
      when: ansible_facts['os_family'] == "RedHat"

    - name: Installing pip
      become: yes
      pip:
        name: PyMySQL
      when: ansible_facts['os_family'] == "RedHat"

    - name: Installing pip
      become: yes
      pip:
        name: PyMySQL
        extra_args: --break-system-packages
      when: ansible_facts['os_family'] == "Debian"

    - name: Start services
      service: name={{ item }} state=started enabled=yes
      become: yes
      with_items:
        - nginx
        - mariadb
      when: ansible_facts['os_family'] == "Debian"

    - name: Start services
      service: name={{ item }} state=started enabled=yes
      become: yes
      with_items:
        - nginx
        - mariadb
      when: ansible_facts['os_family'] == "RedHat"

    - name: Set the root password
      ignore_errors: true
      become: yes
      mysql_user:
        name: root
        password: "{{mysql_root_password}}"
        login_unix_socket: "{{ mysql_login_unix_socket_redhat }}"
      when: ansible_facts['os_family'] == "RedHat"

    - name: Set the root password
      ignore_errors: true
      become: yes
      mysql_user:
        name: root
        password: "{{mysql_root_password}}"
        login_unix_socket: "{{ mysql_login_unix_socket_debian }}"
      when: ansible_facts['os_family'] == "Debian"

    - name: Create a new database with name 'wordpress'
      become: yes
      community.mysql.mysql_db:
        name: "{{mysql_db}}"
        state: present
        login_user: root
        login_password: "{{mysql_root_password}}"

    - name: "removing anonymous users"
      mysql_user:
        login_user: "root"
        login_password: "{{mysql_root_password}}"
        name: ""
        password: ""
        host_all: true
        state: absent

    - name: "creating user"
      mysql_user:
        login_user: "root"
        login_password: "{{mysql_root_password}}"
        name: "{{wp_mysql_user}}"
        password: "{{wp_mysql_password}}"
        state: present
        host: "%"
        priv: "{{mysql_db}}.*:ALL"

    - name: Create wordpress group
      group:
        name: wordpress
        state: present
      become: yes

    - name: Add wordpress user
      become: yes
      user:
        name: wordpress
        group: wordpress
        shell: /bin/bash
        create_home: yes

    - name: Add nginx user to wordpress group
      user:
        name: nginx
        groups: wordpress
        append: yes
      become: yes
      when: ansible_facts['os_family'] == "RedHat"

    - name: Add nginx user to wordpress group
      user:
        name: www-data
        groups: wordpress
        append: yes
      become: yes
      when: ansible_facts['os_family'] == "Debian"

    - name: Remove default nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      become: yes

    - name: Add write permission for others
      become: yes
      ansible.builtin.file:
        path: /var/www/html
        mode: o+w

    - name: Get remote file
      become: yes
      become_user: wordpress
      get_url:
        url: https://wordpress.org/latest.zip
        dest: /var/www/html/
      register: download_result_debian
      when: ansible_facts['os_family'] == "Debian"

    - name: Get remote file
      become: yes
      become_user: wordpress
      get_url:
        url: https://wordpress.org/latest.zip
        dest: /var/www/html/
      register: download_result_redhat
      when: ansible_facts['os_family'] == "RedHat"

    - name: Unzip Archieve
      become: yes
      become_user: wordpress
      unarchive:
        src: "{{ download_result_debian.dest }}"
        dest: /var/www/html/
        remote_src: yes
      when: ansible_facts['os_family'] == "Debian"

    - name: Unzip Archieve
      become: yes
      become_user: wordpress
      unarchive:
        src: "{{ download_result_redhat.dest }}"
        dest: /var/www/html/
        remote_src: yes
      when: ansible_facts['os_family'] == "RedHat"

    - name: Copy Nginx Configuration file
      become: yes
      template:
        src: templates/nginx.template
        dest: /etc/nginx/conf.d/app.conf
      vars:
        php_fpm_socket: /var/run/php-fpm/wordpress.sock
      when: ansible_facts['os_family'] == "RedHat"
      notify: reload nginx

    - name: Copy Nginx Configuration file
      become: yes
      template:
        src: templates/nginx.template
        dest: /etc/nginx/conf.d/app.conf
      vars:
        php_fpm_socket: /var/run/php/wordpress.sock
      when: ansible_facts['os_family'] == "Debian"
      notify: reload nginx

    - name: Copy Php-Fpm Configuration file
      become: yes
      template:
        src: templates/php-fpm.template
        dest: /etc/php-fpm.d/wordpress.conf
      vars:
        php_fpm_socket: /var/run/php-fpm/wordpress.sock
        user: wordpress
      when: ansible_facts['os_family'] == "RedHat"
      notify: reload php-fpm-redhat

    - name: Copy Php Configuration file
      become: yes
      template:
        src: templates/php-fpm.template
        dest: /etc/php/8.3/fpm/pool.d/wordpress.conf
      vars:
        php_fpm_socket: /var/run/php/wordpress.sock
        user: wordpress
      when: ansible_facts['os_family'] == "Debian"
      notify: reload php-fpm-ubuntu

    - name: "setting up wp-config"
      become: yes
      template:
        src: templates/wp-config.php.template
        dest: "/var/www/html/wordpress/wp-config.php"
        owner: "wordpress"
        group: "wordpress"

  handlers:
    - name: reload nginx
      systemd:
        name: nginx
        state: reloaded
      become: yes

    - name: reload php-fpm-ubuntu
      systemd:
        name: php8.3-fpm
        state: restarted
      become: yes

    - name: reload php-fpm-redhat
      systemd:
        name: php-fpm
        state: restarted
      become: yes